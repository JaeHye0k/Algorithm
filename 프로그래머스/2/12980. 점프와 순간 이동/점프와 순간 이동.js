function solution(n) {
    let count = 0;
    
    while(n > 0) {
        
        if(n % 2 !== 0) {
            count++;
        }
        
        n = Math.floor(n / 2);
    }
    
    return count;
}


/*
    최대한 순간이동만으로 N까지 이동하기 
    한 번은 무조건 점프로 이동해야 함
    이동한 거리 누적
    메모이제이션을 활용한 완전탐색 -> 배열의 길이를 10억 으로 해야되기 때문에 초기화하기만 해도 시간초과
    DP 
    텔레포트를 하는 경우, 걷는 경우
    
    n을 2로 계속 나누면서 나누어 떨어지지 않는 경우 카운트를 1증가
*/